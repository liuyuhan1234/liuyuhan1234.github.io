---
layout: post
title:  "CSP相邻数队"
date:   2020-01-08 20:03:35 +0530
categories:  CSP C++

---

## 题目

**问题描述**
　　给定n个不同的整数，问这些数中有多少对整数，它们的值正好相差1。

**输入格式**
　　输入的第一行包含一个整数n，表示给定整数的个数。
　　第二行包含所给定的n个整数。

**输出格式**
　　输出一个整数，表示值正好相差1的数对的个数。

**样例输入**
6
10 2 6 3 7 8

**样例输出**
3

**样例说明**
　　值正好相差1的数对包括(2, 3), (6, 7), (7, 8)。

**评测用例规模与约定**
　　1<=n<=1000，给定的整数为不超过10000的非负整数。


## 解答C++
#### 思路

 标志数组需要左右多２个元素，所以数组元素的个数为N+2。使用函数memset()对标志数组进行初始化是套路，一定要理解掌握并且熟练应用。使用布尔数组也是本程序的一个关键，可以节省空间，但是要付出时间的代价。
```c++

/* CCF201409-1 相邻数对 */

#include <iostream>
#include <cstring>

const int N = 10000;

bool flag[N+2];

using namespace std;

int main()
{
    int n, v, sum=0;

    // 清除标志：flag[i]为true表示i已经出现过，flag[i]为false表示i尚未出现过
    memset(flag, false, sizeof(flag));

    // 输入数据，进行判断，统计处理
    cin >> n;
    for(int i=1; i<=n; i++) {
        // 输入数据
        cin >> v;
        flag[v] = true;

        // 进行判断和统计处理
        if(flag[v-1])
            sum++;
        if(flag[v+1])
            sum++;
    }

    // 输出结果
    cout << sum << endl;

    return 0;
}

```